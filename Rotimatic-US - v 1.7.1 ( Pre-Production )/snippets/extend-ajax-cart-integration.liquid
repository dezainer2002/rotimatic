<!-- 
    @author : Extend
    @version : 06.25.2021 
     
    extend-ajax-cart-integration.liquid
     
    Ajax cart integration script that builds extend offers and styles them on cart pages dynamically.
-->
<script defer="defer">
    // Before scripts get ran check if page is loaded and Extend elements exist
    if (window.Extend && window.ExtendShopify && window.Shopify.currency.active === 'USD') {

            /************************/
            /*  global variables   */
            /***********************/

            var slice = Array.prototype.slice;
            var localAjaxCart = {{ cart || json }};
            var cartRowString = '[CART ROW QUERY STRING]'; // change this to query row string
            var extendContainerString = '[EXTEND CONTAINER STRING]'; // change this to extend container string
            var titleQueryString = '[<a> QUERY STRING]'; // change this to title of cart item
            var inputQueryString = '[<input> QUERY STRING]'; // change this to input of cart item


            /************************/
            /*    util functions   */
            /***********************/

            // findAll(selector)
            // @param selector : selector for querySelectorAll to search through daocument for all instances of selector
            // @return items[] : array of all items that get returned by querySelectorAll if nothing exist it returns an empty array
            function findAll(selector) {
                var items = document.querySelectorAll(selector)
                return items ? slice.call(items, 0) : []
            }
      
            // findAllInElement(selector, element)
			// finds all attributes in a certain element depedant on the selector
            function findAllInElement(selector, element) {
                var items = element.querySelectorAll(selector)
                return items ? slice.call(items, 0) : []
            }

            // refreshCart()    
            // refreshes the page (dependent on current location)
            function refreshCart() {
                location.href = location.hash ? location.href.substring(0, location.href.indexOf('#')) : location.href;
            }

            /*****************************/
            /*    ajax cart functions   */
            /***************************/

            // initializeOffers()
            // iterates through all cart rows and creates and styles Extend products/offers
            function initializeOffers() {

                findAll(cartRowString).forEach(function (rowItem) {
                    createOfferElements(rowItem);
                });
              
				handleStyling();
              
            }

            // renderOffer(extendOffer, variantId, quantity)
            // @param extendOffer
            // @param variantId
            // @param quantity
            // renders the extend offer elements
            function renderOffer(extendOffer, variantId, quantity) {
                //Checks if warranty is in cart and if so exits function
                if (ExtendShopify.warrantyAlreadyInCart(variantId, localAjaxCart.items)) {
                    return;
                }

                //Checks if instance has already rendered and if so updates active product
                if (Extend.buttons.instance(extendOffer)) {
                    Extend.buttons.instance(extendOffer).setActiveProduct(variantId);
                    return;
                }

                Extend.buttons.renderSimpleOffer(extendOffer, {
                    referenceId: variantId,
                    onAddToCart: function (options) {
                        ExtendShopify.addPlanToCart({
                            plan: options.plan,
                            product: options.product,
                            quantity: quantity,
                        },
                            function (err) {
                                // an error occurred
                                if (err) {
                                    return;
                                } else {
                                    //Updates cart using the theme's cart fetch function                 
                                    refreshCart();
                                }
                            }
                        );
                    },
                });
            }

            // createOfferElements(cartRow) 
            // @param cartRow
            // dynamically injects <div> tags to cart items to then be rendered then renders Extend offers
            function createOfferElements(cartRow) {

                // extendQuery will hold the element that div tag will exist in
                var extendOfferContainer = cartRow.querySelector(extendContainerString);

                // removes existing ajax-cart-offer elements before creating new ones
                var extendOffer = extendOfferContainer.querySelector('#extend-ajax-cart-offer');
                if (extendOffer) { extendOfferContainer.removeChild(extendOffer); }

                // gets variantId from title <a> element
                var aTag = cartRow.querySelector(titleQueryString).getAttribute('href');
                // gets quantity from quantity <input> tag
                var quantity = cartRow.querySelector(inputQueryString).value;

                // check to make sure needed variables exists before we create div elemnts
                if (aTag && quantity) {
                    var regEx = /\d+$/;
                    var variantId = aTag.match(regEx)[0];

                    // div creation of extend-ajax-cart-offer element
                    // appends it to extendQuery element
                    var extendAjaxOffer = document.createElement("div");
                    extendAjaxOffer.setAttribute("id", "extend-ajax-cart-offer");
                    extendAjaxOffer.setAttribute("data-extend-variant", variantId);
                    extendAjaxOffer.setAttribute("data-extend-quantity", quantity);
                    extendOfferContainer.appendChild(extendAjaxOffer);

                    renderOffer(extendAjaxOffer, variantId, quantity);
                }
            }

            // handleStyling()
            // dynamically styles extend cart items (removes clickable links, unwanted details)
            function handleStyling() {
              findAll('[data-cart-item]').forEach(function(el) {
                var isRemove = el.getAttribute('data-removed-item-row') === "true";
                if (isRemove) return;
                var title = el.querySelector('.cart__product-title');
                var isExtend = false;
                var img = el.querySelector('[data-cart-item-image]');
                if (title.innerText.toLowerCase().indexOf('extend protection') > -1){
                  title.style = "pointer-events: none;"
                  img.style = "pointer-events: none;"
                  isExtend = true;
                }
                findAllInElement('.product-details__item', el).forEach(function(el2){
                  el2.style = '';
                  if (!isExtend) return;
                  if(el2.innerText.toLowerCase().indexOf('product') > -1) return;
                  if(el2.innerText.toLowerCase().indexOf('term') > -1) return;
                  el2.style = 'display: none;'
                });
              });
            }

            // normalizeCart()
            // refreshesPage to ensure Extend product quantity matches products they are matched to
            function normalizeCart() {
                // cart normalization function to make sure there are no imbalances with extend product and Extend products
                ExtendShopify.normalizeCart({ cart: localAjaxCart, balance: true }, function (err, data) {
                    if (data && data.updates) {
                        //Updates cart using the theme's cart fetch function
                        refreshCart();
                    }
                });
            }

            /************************/
            /*    Event Listener   */
            /**********************/
            window.addEventListener("refreshCart", function () {
                $.getJSON("/cart.js", function (newCart) {
                    localAjaxCart = newCart;
                    initializeOffers();
                    normalizeCart();
                });
            });

            // initializes page elements
            initializeOffers();
            normalizeCart();
    }
</script>