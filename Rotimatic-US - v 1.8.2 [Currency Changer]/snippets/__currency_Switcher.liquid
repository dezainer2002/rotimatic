{%-liquid
  assign ss             =     section.settings

  assign scssFile       =     '__currency_Switcher.scss.css' | asset_url

  assign show_selectors =     ss.show_currency_selector
-%}

<link rel="stylesheet" href="{{ scssFile }}">

{%- if show_selectors -%}
  <div class="currencySwitcher">
    {%- form 'localization', class: 'selectors-form' -%}
      <span class="shipTo">Ship to</span>
      <div class="disclosure disclosure-currency" data-disclosure-currency>
        <button type="button" class="disclosure__toggle" aria-expanded="false" aria-controls="currency-list" aria-describedby="currency-heading" data-disclosure-toggle>
          <span class="flag {{ form.current_currency.iso_code }}"></span>
          {{ form.current_currency.iso_code }}{%- if form.current_currency.symbol -%}{{ form.current_currency.symbol }}{%- endif -%}
        </button>
        <ul id="currency-list" class="disclosure-list listDown" data-disclosure-list>
          {% for currency in form.available_currencies %}
            {%-liquid
              capture currencyHref
                if settings.enableIndianCurrencyChanger and settings.indianDomainName != blank

                  echo settings.indianDomainName

                else

                  echo 'javascript://;'

                endif
              endcapture
            -%}
            <li iso-code="{{ currency.iso_code }}" class="disclosure-list__item {% if currency.iso_code == form.current_currency.iso_code %}disclosure-list__item--current{% endif %}">
              <a class="disclosure-list__option {{ currency.iso_code }}" href="javascript://;" redirect-to="{{ currencyHref }}" iso-code="{{ currency.iso_code }}" {% if currency.iso_code == form.current_currency.iso_code %}aria-current="true"{% endif %}>
                <span class="flag {{ currency.iso_code }}"></span>
                {{ currency.iso_code }}{%- if currency.symbol -%}{{ currency.symbol }}{%- endif -%}
              </a>
            </li>
          {%- endfor -%}
        </ul>
        <input type="hidden" name="currency_code" id="CurrencySelector" value="{{ form.current_currency.iso_code }}" data-disclosure-input/>
      </div>
    {%- endform -%}
  </div>

  <div class="modalCartError">
    <div class="centerCenter">
      <p style="white-space: break-spaces;">You are changing the country, items in your cart will be removed. Are you sure?</p>

      <span class="cancel">Cancel</span>
      <span class="changeCurrency">Change</span>
    </div>
  </div>

  <script>
    $( document )
    .on('click', '#currency-list .disclosure-list__item',async function( e ) {
      try {

        e.stopImmediatePropagation();

        const getCurrency       =   $( this ).attr( 'iso-code' );

        $( '#CurrencySelector' ).val( getCurrency );

        const currentCurrency   =   $( `body` ).attr( 'current-currency' );


        console.log ( 'getCartCount', cartCount );

        if ( cartCount > 0 && getCurrency != currentCurrency ) {

          $( `.modalCartError` ).show();

        } else if ( currentCurrency == getCurrency ) {

          const isIndia         =   await handleIndiaCurrency();

          if ( isIndia ) {

            $( '.currencySwitcher #localization_form' ).submit();

          }

        } else {

          const isIndia         =   await handleIndiaCurrency();

          if ( isIndia ) {

            $( '.currencySwitcher #localization_form' ).submit();

          }

        }

      }
      catch ( err ) {
        console.log ( 'ERROR #currency-list .disclosure-list__item', err.message );
      }
    })

    .on('click', '.modalCartError .cancel', function( e ) {
      try {

        e.stopImmediatePropagation();

        $( `.modalCartError` ).hide();

      }
      catch ( err ) {
        console.log ( 'ERROR .modalCartError .cancel', err.message );
      }
    })

    .on('click', '.modalCartError .changeCurrency', function( e ) {
      try {

        e.stopImmediatePropagation();

        $.post(`/cart/clear.js`, function ( r ) {

          $( '.currencySwitcher #localization_form' ).submit();

        },"json");

      }
      catch ( err ) {
        console.log ( 'ERROR .modalCartError .changeCurrency', err.message );
      }
    })

    .on('click', '.disclosure.disclosure-currency', function( e ) {
      try {

        getCrtStatus( this )

      }
      catch ( err ) {
        console.log ( 'ERROR .disclosure.disclosure-currency', err.message );
      }
    })

    .mouseup(function( e ) {

      var container   =   $( '.disclosure.disclosure-currency #currency-list' );

      if (!container.is(e.target) && container.has(e.target).length === 0) {

        container.removeClass( 'disclosure-list--visible' );

      }

    });

    async function handleIndiaCurrency() {
      try {

        let rtn                   =   true;

        const currency            =   $( '#CurrencySelector' ).val();

        if ( typeof currency !== 'undefined' && currency && currency === 'INR' ) {

          const getIndStoreURL    =   $( `#currency-list .disclosure-list__item[iso-code="${ currency }"] .disclosure-list__option` ).attr( `redirect-to` );

          console.log ( 'getIndStoreURL', getIndStoreURL );

          let currentURL          =   location.href.replace( `https://rotimatic.com`, `` );

          location.href           =   `${ getIndStoreURL }${ currentURL }`;

          console.log ( 'currency', currency );

          rtn                     =   false;

        }

        return rtn;

      }
      catch ( err ) {
        console.log( `ERROR handleIndiaCurrency()`, err.message );
      }
    }

    async function getCrtStatus( this_, ISO_CODE = '' ) {
      try {

        const isActive    =   $( this_ ).find( '#currency-list' ).hasClass( 'disclosure-list--visible' );

        if ( typeof isActive !== 'undefined' && isActive ) {

          $( this_ ).find( '#currency-list' ).removeClass( 'disclosure-list--visible' );

        } else {

          $.get(`/cart.js`, function ( r ) {

            cartCount   =   r.item_count;

            if ( typeof ISO_CODE !== 'undefined' && ISO_CODE ) {

              $( `#currency-list li[iso-code="${ ISO_CODE }"] > a` ).click();

            }

          },'json');

          if ( typeof ISO_CODE !== 'undefined' && ISO_CODE ) {

          } else {

            $( this_ ).find( '#currency-list' ).addClass( 'disclosure-list--visible' );

          }

        }

      }
      catch ( err ) {
        console.log( `ERROR getCrtStatus`, err.message );
      }
    }
  </script>

{%- endif -%}