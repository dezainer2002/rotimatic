{%-liquid
	assign ss			    =			section.settings
	assign sb			    =			section.blocks

  assign scssFile   =     'gallery.scss.css' | asset_url

	capture section_galleryGrid
		render '__getParam' with { paramStart: 'section_id=' }
	endcapture
-%}

<link rel="stylesheet" href="{{ scssFile }}">

{% capture sectionHTML %}
  <div class="gallery-wrapper">
    <div class="gallery">
      {% for block in section.blocks %}
        {% if block.type == 'main_block' %}
          <div class="gallery-main-block" style="background-image: url({{ block.settings.image | img_url: '400x400' }});">
            <div class="gallery-main-content">
              {% if block.settings.show_play_icon %}
                <a
                  {% if block.settings.button_popup %}
                    data-fancybox="" data-options="{"iframe" : {"css" : {"width" : "80%", "height" : "80%"}}}"
                  {% endif %}
                  class="gallery-popup" href="{{ block.settings.button_link }}" aria-label="{{ ariaLabel }}"
                  {% if block.settings.button_popup %}
                    modal-popup="{{ block.settings.button_popup }}"
                  {% endif %}
                >
                  <img class="lazyload"
                    src="{{ block.settings.play_icon | img_url: 'master' }}"
                    alt="{{ block.settings.play_icon.alt | escape }}"
                  >
                </a>
              {% endif %}

              {% if block.settings.title != blank %}
                <h2 class="h2">{{ block.settings.title | escape }}</h2>
              {% endif %}

              {% if block.settings.text != blank %}
                <div class="gallery-description">{{ block.settings.text }}</div>
              {% endif %}

              {% if block.settings.show_play_icon == false %}
                {% if block.settings.button_label != blank and block.settings.button_link != blank %}
                  <a href="{{ block.settings.button_link }}"
                    class="btn btn--secondary"
                  >
                    {{- block.settings.button_label | escape -}}
                  </a>
                {% endif %}
              {% endif %}
            </div>
          </div>

          {% if block.settings.button_popup %}
            <script>
              $( document )
              .on('click', '.gallery-popup[modal-popup="true"]', function( e ) {
                try {
                  e.preventDefault();
                  e.stopImmediatePropagation();

                  const getYoutubeUrl   =   $( this ).attr( 'href' );

                  const getTemp   =   templateHeroVideo( getYoutubeUrl );

                  $( 'body' ).prepend( getTemp );
                }
                catch ( err ) {
                  console.log ( 'ERROR .gallery-popup[modal-popup="true"]', err.message );
                }
              })

              .on('click', '.galleryVideoModal ._close_', function( e ) {
                try {
                  e.stopImmediatePropagation();

                  $( '.galleryVideoModal' ).remove();
                }
                catch ( err ) {
                  console.log ( 'ERROR .galleryVideoModal ._close_', err.message );
                }
              });

              function templateHeroVideo( getYoutubeUrl ) {
                return `
                  <div class="galleryVideoModal">
                    <div class="_close_"><svg viewBox="0 0 50 50"><g><polygon points="2.707,48.707 25,26.414 47.293,48.707 48.707,47.293 26.414,25 48.707,2.707 47.293,1.293 25,23.586 2.707,1.293 1.293,2.707 23.586,25 1.293,47.293"></polygon></g><g></g></svg></div>
                    <div class="centerCenter">
                      <iframe class="youtubeVideo" width="100%" height="100%" src="${ getYoutubeUrl }" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
                    </div>
                  </div>
                `;
              }
            </script>
          {% endif %}
        {% endif %}
      {% endfor %}

      <div class="gallery-others">
        {% for block in section.blocks %}
          {% assign b = block.settings %}
          {% if block.type == 'other_block' %}
            {% if b.link != blank %}
              <a href="{{ b.link }}" class="gallery-other-block jsLInkEvent" style="background-color: {{ block.settings.color }};">
                {% if block.settings.other_image != blank %}
                  <div class="gallery-image">
                    <img class="lazyload"
                      src="{{ block.settings.other_image | img_url: 'master' }}"
                      alt="{{ block.settings.other_image.alt | escape }}" />
                  </div>
                {% endif %}
                {% if block.settings.text != blank %}
                  <div class="gallery-description">
                    {{ block.settings.text }}
                  </div>
                {% endif %}
              </a>
            {% else %}
              <div class="gallery-other-block jsLInkEvent" style="background-color: {{ block.settings.color }};">
                {% if block.settings.other_image != blank %}
                  <div class="gallery-image">
                    <img class="lazyload"
                      src="{{ block.settings.other_image | img_url: 'master' }}"
                      alt="{{ block.settings.other_image.alt | escape }}" />
                  </div>
                {% endif %}
                {% if block.settings.text != blank %}
                  <div class="gallery-description">
                    {{ block.settings.text }}
                  </div>
                {% endif %}
              </div>
            {% endif %}
          {% endif %}
        {% endfor %}
      </div>
    </div>
  </div>
{% endcapture %}


{% if ss.onViewLoad %}
	{% if section_galleryGrid == section.id %}
		{{ sectionHTML }}
	{% else %}

		<div class="onViewLoadSection section_galleryGrid" sec-id="{{ section.id }}"></div>

		<script>
      window.addEventListener('load', function() {

        require( `${ asset_url }__isInViewport.js` );

        setTimeout(()=>{
          onViewLoad__section_galleryGrid( 'onload' );
        }, {{ ss.loadAfter | times: 1000 }});
      });


			function onViewLoad__section_galleryGrid( typeIs = '' ) {
				const sectionIs             =   `.onViewLoadSection.section_galleryGrid`;
				const checkSectionLoaded    =   $( sectionIs ).hasClass( `sectionLoaded` );
				const sectionID             =   $( sectionIs ).attr( `sec-id` );

				if ( checkSectionLoaded == false ) {

					const isVisible     =   isInViewport( sectionIs );

					if ( isVisible || typeIs == 'onload' ) {

						$( sectionIs ).addClass( 'sectionLoaded' );

						$.get( `/?section_id=${ sectionID }` , function ( r ) {

							$( sectionIs ).html( r );

						});

					}
				}

			}

			let wheeldelta_section_galleryGrid = {
				x: 0,
				y: 0
			};
			let wheeling_section_galleryGrid;
			$( window ).on('scroll', async function() {
				try {
					clearTimeout( wheeling_section_galleryGrid );
					wheeling_section_galleryGrid        =   setTimeout(async function() {
						wheeling_section_galleryGrid      =   undefined;

						wheeldelta_section_galleryGrid.x  =   0;
						wheeldelta_section_galleryGrid.y  =   0;

						onViewLoad__section_galleryGrid();

					}, 250);

				}
				catch ( err ) {
					console.log ( 'Error Scroll', err.message );
				}
			});
		</script>

	{% endif %}

{% else %}
	{{ sectionHTML }}
{% endif %}

{% schema %}
{
  "name": "Grid Gallery",
  "class": "index-section index-gallery-grid",
  "settings": [
		{
			"type"      :   "checkbox",
			"id"        :   "onViewLoad",
			"label"     :   "On View Load this section",
			"default"   :   true
		},
    {
      "type"      :   "range",
      "id"        :   "loadAfter",
      "label"     :   "Self Load after",
      "unit"      :   "sec",
      "min"       :   1,
      "max"       :   20,
      "step"      :   1,
      "default"   :   5
    }
	],
  "blocks": [
    {
      "type": "main_block",
      "name": "Main Block",
      "settings": [
        {
          "type": "image_picker",
          "id": "image",
          "label": "Background Image"
        },
        {
          "type": "text",
          "id": "title",
          "label": "Heading",
          "default": "Now anyone can roti!"
        },
        {
          "type": "richtext",
          "id": "text",
          "label": "Description",
          "default": "<p>Join the crowd! Check out what users have to say about the Rotimatic here.</p>"
        },
        {
          "type": "text",
          "id": "button_label",
          "label": "Button label"
        },
        {
          "type": "url",
          "id": "button_link",
          "label": "Button link"
        },
		    {
          "type": "checkbox",
		      "id": "show_play_icon",
          "label": "Play Icon",
		      "default": true
		    },
		    {
          "type": "image_picker",
          "id": "play_icon",
          "label": "Play Icon"
        },
		    {
          "type": "checkbox",
          "id": "button_popup",
          "label": "Modal Popup",
          "default": true
		    }
      ]
    },
    {
      "type": "other_block",
      "name": "Other Block",
      "settings": [
        {
          "type": "image_picker",
          "id": "other_image",
          "label": "Image"
        },
        {
          "type": "richtext",
          "id": "text",
          "label": "Description",
          "default": "<p>A potential game changer for roti-loving households</p>"
        },
        {
          "type": "color",
          "id": "color",
          "label": "Background Color"
        },
        {
          "type"    :   "url",
          "id"      :   "link",
          "label"   :   "Block Link"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Grid Gallery",
      "category": "Grid Gallery"
    }
  ]
}
{% endschema %}
